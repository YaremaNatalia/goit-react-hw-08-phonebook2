{"version":3,"file":"static/js/637.6912b8ce.chunk.js","mappings":"wQAkGA,UA1FkB,WAChB,MAAeA,EAAAA,EAAAA,UAARC,GAAP,eAUMC,GAAWC,EAAAA,EAAAA,MAGjB,OAFwBC,EAAAA,EAAAA,IAAYC,EAAAA,KAER,SAAC,KAAD,CAAUC,GAAG,eAEvC,UAAC,KAAD,YACE,SAAC,KAAD,UAAW,6BACX,SAAC,KAAD,WACE,UAAC,IAAD,CACEL,KAAMA,EACNM,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,MAAO,CACLC,SAAU,KAEZC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAjCS,SAAAC,GAEff,GAASgB,EAAAA,EAAAA,IAAeD,IACxBhB,EAAKkB,aACN,EA8BOC,eA7Be,SAAAC,GACrBC,QAAQC,IAAI,UAAWF,EACxB,EA4BOG,aAAa,KAlBf,WAoBE,SAAC,SAAD,CACEC,MAAM,QACNlB,KAAK,QACLmB,KAAK,QACLC,GAAG,QACHC,YAAY,mBACZC,UAAQ,EACRC,MAAO,CACL,CACED,UAAU,EACVE,QAAS,6BAVf,UAcE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEN,MAAM,WACNlB,KAAK,WACLoB,GAAG,WACHD,KAAK,WACLE,YAAY,sBACZC,UAAQ,EACRG,UAAW,EACXF,MAAO,CACL,CACED,UAAU,EACVE,QAAS,gCAXf,UAeE,SAAC,aAAD,OAGF,SAAC,SAAD,CACErB,WAAY,CACVuB,OAAQ,EACRxB,KAAM,IAHV,UAME,SAAC,KAAD,CAAQiB,KAAK,UAAUQ,SAAS,SAAhC,SAAyC,oBAQpD,C,qIC9FYC,EAAgBC,EAAAA,GAAAA,IAAH,6EAKbC,EAAcD,EAAAA,GAAAA,IAAH,oSAWXE,EAAYF,EAAAA,GAAAA,GAAH,0G","sources":["pages/LoginPage.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import React from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { FormContainer, FormTitle, FormWrapper } from './RegisterPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUserThunk } from 'redux/authentifServices';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { Navigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const [form] = Form.useForm();\n  const onFinish = values => {\n    // console.log('Success:', values);\n    dispatch(loginUserThunk(values));\n    form.resetFields();\n  };\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n  if (authentificated) return <Navigate to=\"/contacts\" />;\n  return (\n    <FormContainer>\n      <FormTitle>Login into your account</FormTitle>\n      <FormWrapper>\n        <Form\n          form={form}\n          name=\"basic\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"on\"\n        >\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Enter your email\"\n            required\n            rules={[\n              {\n                required: true,\n                message: 'Please input your email!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            required\n            minLength={7}\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </FormWrapper>\n    </FormContainer>\n  );\n};\n\nexport default LoginPage;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  padding: 30px;\n  width: 100vw;\n  height: 100vh;\n`;\nexport const FormWrapper = styled.div`\n  margin: 0 auto 20px;\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 12px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  padding: 20px;\n  width: 480px;\n`;\n\nexport const FormTitle = styled.h2`\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n  color: #fff;\n`;\n\n// export const FormStyled = styled.form`\n//   margin: 0 auto 20px;\n//   background-color: #fff;\n//   border: 1px solid #000;\n//   border-radius: 12px;\n//   box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n//     0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   padding: 20px;\n//   width: 450px;\n// `;\n// export const FormLabel = styled.label`\n//   display: block;\n//   margin-bottom: 10px;\n//   font-weight: bold;\n// `;\n// export const FormInput = styled.input`\n//   width: 100%;\n//   height: 40px;\n//   margin-bottom: 10px;\n//   outline: none;\n//   border: solid 2px #9e9e9e;\n//   border-radius: 5px;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   &:hover,\n//   &:focus {\n//     border: none;\n//     border: solid 2px #1677ff;\n//     box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n//       0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n//   }\n// `;\n\n// export const FormButton = styled.button`\n//   font-size: 16px;\n//   width: 150px;\n//   height: 40px;\n//   border-radius: 5px;\n//   color: white;\n//   background-color: #1677ff;\n//   border: none;\n//   margin: 0 auto;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   &:hover,\n//   &:focus {\n//     color: white;\n//     background-color: #161eff;\n//   }\n// `;\n"],"names":["Form","form","dispatch","useDispatch","useSelector","selectAuthentificated","to","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","email","password","onFinish","values","loginUserThunk","resetFields","onFinishFailed","errorInfo","console","log","autoComplete","label","type","id","placeholder","required","rules","message","minLength","offset","htmlType","FormContainer","styled","FormWrapper","FormTitle"],"sourceRoot":""}