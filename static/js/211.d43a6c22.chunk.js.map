{"version":3,"file":"static/js/211.d43a6c22.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormGroup = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto 20px;\n  padding: 20px 0;\n  width: 480px;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input } from 'antd';\n\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/contactsReducer';\nimport { FormGroup, FormLabel } from './Filter.styled';\n\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FormGroup>\n      <FormLabel>\n        <p>Find contacts by name or phone number:</p>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter letters or digits to filter your contacts\"\n          value={filter}\n          onChange={onFilterChange}\n          required\n        />\n        ;\n        {/* <FormInput\n          type=\"text\"\n          placeholder=\"Enter letters or digits to filter your contacts\"\n          required\n          value={filter}\n          onChange={onFilterChange}\n        /> */}\n      </FormLabel>\n    </FormGroup>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const ContactUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto 20px;\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 12px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  padding: 20px;\n  width: 450px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: bold;\n`;\n\nexport const ContactNumber = styled.p`\n  color: #555555;\n`;\n\nexport const RemoveBtn = styled.ul`\n  background-color: #cac6c6;\n  color: #000;\n  border: none;\n  border-radius: 4px;\n  padding: 4px 8px;\n  cursor: pointer;\n  font-size: 12px;\n  &:hover,\n  &:focus {\n    background-color: #ff0000;\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsServices';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  ContactUl,\n  RemoveBtn,\n} from './ContactList.styled';\nimport { FormTitle } from 'pages/RegisterPage.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n  return (\n    <div>\n      <FormTitle>Your contacts</FormTitle>\n      <ContactUl>\n        {filteredContacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <ContactName>{contact.name}</ContactName>\n              <ContactNumber>{contact.number}</ContactNumber>\n              <RemoveBtn\n                onClick={() => handleDeleteContact(contact.id)}\n                type=\"button\"\n                aria-label=\"Delete contact\"\n              >\n                &times;\n              </RemoveBtn>\n            </ContactItem>\n          );\n        })}\n      </ContactUl>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { Button, Form, Input } from 'antd';\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsIsloading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport { addContactThunk, requestContactsThunk } from 'redux/contactsServices';\nimport { Loader } from 'components/Loader';\nimport { FormContainer, FormTitle } from './RegisterPage.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsloading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n    const contactData = {\n      name,\n      number: number.replace(/[\\s()-]+/g, ''),\n    };\n\n    const isDuplicateName = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n    if (isDuplicateName) {\n      form.reset();\n      return Notiflix.Notify.failure(\n        `Contact with name ${name} or phone number ${number} is already in contacts!`\n      );\n    }\n\n    dispatch(addContactThunk(contactData));\n    form.reset();\n  };\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && (\n        <p className=\"errorMessage\">Whoops, something went wrong: {error}</p>\n      )}\n      <section>\n        <FormContainer>\n          <FormTitle>Add new contact</FormTitle>\n          <Form\n            onSubmit={handleSubmit}\n            name=\"wrap\"\n            labelCol={{\n              flex: '110px',\n            }}\n            labelAlign=\"left\"\n            labelWrap\n            wrapperCol={{\n              flex: 1,\n            }}\n            colon={false}\n            style={{\n              maxWidth: 600,\n            }}\n          >\n            <Form.Item\n              label=\"Name\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input\n                type=\"text\"\n                name=\"contactName\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Enter name\"\n                required\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Number\"\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input\n                name=\"contactNumber\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                type=\"text\"\n                placeholder=\"Enter phone number\"\n                required\n              />\n            </Form.Item>\n\n            <Form.Item label=\" \">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Add contact\n              </Button>\n            </Form.Item>\n          </Form>\n\n          {/* <FormStyled onSubmit={handleSubmit}>\n            <FormLabel>\n              <p>Name:</p>\n              <FormInput\n                type=\"text\"\n                name=\"contactName\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Enter name\"\n                required\n              />\n            </FormLabel>\n\n            <FormLabel>\n              <p>Number:</p>\n              <FormInput\n                name=\"contactNumber\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                type=\"text\"\n                placeholder=\"Enter phone number\"\n                required\n              />\n            </FormLabel>\n\n            <FormButton type=\"submit\">Add contact</FormButton>\n          </FormStyled> */}\n          {contacts && contacts.length > 0 && <Filter />}\n          {contacts && contacts.length > 0 && <ContactList />}\n        </FormContainer>\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  padding: 30px;\n  width: 100%;\n  height: 100%;\n`;\nexport const FormWrapper = styled.div`\n  margin: 0 auto 20px;\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 12px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  padding: 20px;\n  width: 480px;\n`;\n\nexport const FormTitle = styled.h2`\n  text-align: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\n// export const FormStyled = styled.form`\n//   margin: 0 auto 20px;\n//   background-color: #fff;\n//   border: 1px solid #000;\n//   border-radius: 12px;\n//   box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n//     0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   padding: 20px;\n//   width: 450px;\n// `;\n// export const FormLabel = styled.label`\n//   display: block;\n//   margin-bottom: 10px;\n//   font-weight: bold;\n// `;\n// export const FormInput = styled.input`\n//   width: 100%;\n//   height: 40px;\n//   margin-bottom: 10px;\n//   outline: none;\n//   border: solid 2px #9e9e9e;\n//   border-radius: 5px;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   &:hover,\n//   &:focus {\n//     border: none;\n//     border: solid 2px #1677ff;\n//     box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n//       0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n//   }\n// `;\n\n// export const FormButton = styled.button`\n//   font-size: 16px;\n//   width: 150px;\n//   height: 40px;\n//   border-radius: 5px;\n//   color: white;\n//   background-color: #1677ff;\n//   border: none;\n//   margin: 0 auto;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   &:hover,\n//   &:focus {\n//     color: white;\n//     background-color: #161eff;\n//   }\n// `;\n"],"names":["FormGroup","styled","FormLabel","Filter","filter","useSelector","selectFilter","dispatch","useDispatch","type","placeholder","value","onChange","event","setFilter","target","required","ContactUl","ContactItem","ContactName","ContactNumber","RemoveBtn","ContactList","filteredContacts","selectFilteredContacts","map","contact","name","number","onClick","contactId","id","deleteContactThunk","authentificated","selectAuthentificated","contacts","selectUserContacts","isLoading","selectContactsIsloading","error","selectContactsError","useEffect","requestContactsThunk","Loader","className","onSubmit","preventDefault","form","currentTarget","elements","contactName","contactNumber","contactData","replace","some","toLowerCase","reset","Notiflix","addContactThunk","labelCol","flex","labelAlign","labelWrap","wrapperCol","colon","style","maxWidth","label","rules","title","htmlType","length","FormContainer","FormWrapper","FormTitle"],"sourceRoot":""}